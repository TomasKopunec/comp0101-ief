#!/bin/env python3
import sys
import yaml
import matplotlib.pyplot as plt
import random
from datetime import datetime
import os


current_path = os.getcwd()

def create_diagram(x_data, y_data, title, x_label, y_label, filename):
    plt.figure(figsize=(10, 4))
    plt.scatter(x_data, y_data)

    plt.title(title)
    plt.xlabel(x_label)
    plt.ylabel(y_label)

    # Save the plot to a file
    plt.savefig(filename, bbox_inches='tight')
    plt.close()  # Close the plot to avoid displaying it in the next plot
    #print(f"Diagram saved as {filename}")

# Function to assign random values
def assign_random_values(data):
    return [random.randint(1, 10) for _ in data]

# Initialize an empty list to collect lines
input_lines = []

for line in sys.stdin:
    # Collect the lines
    input_lines.append(line)

# Join the collected lines into a single string
yaml_input = ''.join(input_lines)

try:
    # Parse the entire YAML input
    data = yaml.safe_load(yaml_input)[0]
    
    if data is not None:
        # Extract potential_times and potential_locations
        times = data['potential_times']
        locations = data['potential_locations']

        # Convert times to datetime objects and assign random values
        times = [datetime.fromisoformat(time.replace("Z", "+00:00")) for time in times]
        time_values = assign_random_values(times)

        # Assign random values to locations
        location_values = assign_random_values(locations)

        # Create and save the diagrams
        create_diagram(times, time_values, 'Times and Values', 'Timestamp', 'Value', 'time_values_diagram.png')
        create_diagram(locations, location_values, 'Locations and Values', 'Location', 'Value', 'location_values_diagram.png')
        data['location_diagram'] = current_path + '/location_values_diagram.png'
        data['time_diagram'] = current_path +  '/time_values_diagram.png'
        print(data)
    else:
        print("No valid YAML input provided.")
except yaml.YAMLError as e:
    print("Error parsing YAML:", e)
